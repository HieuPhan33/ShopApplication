/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CustomerPurchaseApplication;

import model.*;
import java.util.*;
import java.io.*;
import java.time.LocalDateTime;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.text.*;
import java.time.DayOfWeek;

/**
 *
 * @author USER
 */
public class ShopApplication extends javax.swing.JFrame {

    private static StringBuilder activities = new StringBuilder();
    //Array of ID to know which smallest available ID is
    private static int count = 0;
    private static Shop coles = new Shop();
    private static String cardFileName = "cards.txt";
    private static String purchaseFileName = "purchases.txt";
    private static String logFileName = "log.txt";

    /**
     * Creates new form ass3
     */
    public ShopApplication() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardButton = new javax.swing.ButtonGroup();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        createButton = new javax.swing.JButton();
        name = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        anonBut = new javax.swing.JRadioButton();
        premBut = new javax.swing.JRadioButton();
        basicBut = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        overviewTxt = new javax.swing.JTextArea();
        cardOverview = new javax.swing.JButton();
        purchaseOverview = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        deleteButton = new javax.swing.JButton();
        cardID = new javax.swing.JTextField();
        findButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        fromDate = new javax.swing.JTextField();
        toDate = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        daySlider = new javax.swing.JSlider();
        dayCheck = new javax.swing.JCheckBox();
        timeCheck = new javax.swing.JCheckBox();
        timeSlider = new javax.swing.JSlider();
        viewButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        filterText = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        meatTxt = new javax.swing.JTextField();
        decoTxt = new javax.swing.JTextField();
        dairyTxt = new javax.swing.JTextField();
        clothesTxt = new javax.swing.JTextField();
        vegeTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Purchase = new javax.swing.JButton();
        cardIDTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        shutdownBt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Day");

        createButton.setText("Create new card");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Name");

        jLabel2.setText("Email");

        cardButton.add(anonBut);
        anonBut.setText("Anon Card");

        cardButton.add(premBut);
        premBut.setText("Premium Card");

        cardButton.add(basicBut);
        basicBut.setText("Basic Card");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(47, 47, 47))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(basicBut)
                            .addComponent(premBut)
                            .addComponent(anonBut))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(createButton)
                .addGap(226, 226, 226))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(anonBut)
                        .addGap(45, 45, 45)
                        .addComponent(basicBut)
                        .addGap(24, 24, 24)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(premBut)))
                .addGap(69, 69, 69)
                .addComponent(createButton)
                .addContainerGap())
        );

        jTabbedPane5.addTab("Issue New Cards", jPanel1);

        overviewTxt.setColumns(20);
        overviewTxt.setRows(5);
        jScrollPane1.setViewportView(overviewTxt);

        cardOverview.setText("Summarize Cards");
        cardOverview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardOverviewActionPerformed(evt);
            }
        });

        purchaseOverview.setText("Summarize Purchases");
        purchaseOverview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseOverviewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(140, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cardOverview)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(purchaseOverview))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(123, 123, 123))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(95, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cardOverview)
                    .addComponent(purchaseOverview))
                .addGap(94, 94, 94))
        );

        jTabbedPane5.addTab("Overview", jPanel3);

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        findButton.setText("Find");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        text.setColumns(20);
        text.setRows(5);
        jScrollPane2.setViewportView(text);

        jLabel9.setText("Enter Card ID");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(findButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, Short.MAX_VALUE)
                .addComponent(deleteButton)
                .addGap(145, 145, 145))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(176, 176, 176))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(255, 255, 255))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(cardID, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(237, 237, 237))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(105, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(26, 26, 26)
                .addComponent(cardID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findButton)
                    .addComponent(deleteButton))
                .addGap(73, 73, 73))
        );

        jTabbedPane5.addTab("Delete/Find Card", jPanel4);

        fromDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromDateActionPerformed(evt);
            }
        });

        jLabel10.setText("From");

        jLabel11.setText("To");

        jLabel12.setText("Date");

        daySlider.setMajorTickSpacing(1);
        daySlider.setMaximum(7);
        daySlider.setMinimum(1);
        daySlider.setPaintLabels(true);
        daySlider.setPaintTicks(true);
        daySlider.setToolTipText("");

        dayCheck.setText("Day");

        timeCheck.setText("Time");

        timeSlider.setMajorTickSpacing(3);
        timeSlider.setMaximum(23);
        timeSlider.setMinorTickSpacing(1);
        timeSlider.setPaintLabels(true);
        timeSlider.setPaintTicks(true);

        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        filterText.setColumns(20);
        filterText.setRows(5);
        jScrollPane3.setViewportView(filterText);

        jLabel13.setText("From 1 (MONDAY) to 7 (SUNDAY)");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel12)
                        .addGap(24, 24, 24)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addComponent(daySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22)
                                        .addComponent(jLabel13))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56)
                                        .addComponent(jLabel11)
                                        .addGap(26, 26, 26)
                                        .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(timeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(timeCheck))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(dayCheck)))
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(viewButton)
                        .addGap(257, 257, 257))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dayCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(daySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel13)))
                .addGap(15, 15, 15)
                .addComponent(timeCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewButton))
        );

        jTabbedPane5.addTab("Filter", jPanel6);

        jLabel3.setText("Meat");

        jLabel4.setText("Decoration");

        jLabel5.setText("Dairy");

        jLabel6.setText("Clothes");

        jLabel7.setText("Vegetables");

        Purchase.setText("Purchase");
        Purchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PurchaseActionPerformed(evt);
            }
        });

        jLabel8.setText("Enter your Card ID");

        jLabel14.setText("Enter the amount of purchases");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cardIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dairyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(meatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clothesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(131, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jLabel7)
                .addGap(59, 59, 59)
                .addComponent(vegeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addComponent(Purchase)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cardIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(meatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dairyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(clothesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(vegeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(Purchase)
                .addGap(82, 82, 82))
        );

        jTabbedPane5.addTab("Make Purchases", jPanel2);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        shutdownBt.setText("Shutdown");
        shutdownBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shutdownBtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(271, 271, 271)
                .addComponent(shutdownBt)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(shutdownBt))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Display aggregation by input of HashMap of aggregation
    private String displayAggregation(HashMap<String, Double> Aggregation) {
        String text = "";
        text += "Total purchases was made in given time range is " + Aggregation.get("total") + "\n";
        text += "Total value was made in given time range is " + Aggregation.get("totalValue") + "\n";

        for (Map.Entry<String, Double> eachEntry : Aggregation.entrySet()) {
            if (!eachEntry.getKey().equals("total") && !eachEntry.getKey().equals("totalValue")) {
                text += eachEntry.getKey() + " : " + eachEntry.getValue() + "\n";
            }
        }
        return text;
    }
    private void shutdownBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shutdownBtActionPerformed
        try {
            storeData();
        } catch (IOException e) {
            System.out.println("Failed to access the file ");
        }
        System.exit(0);

    }//GEN-LAST:event_shutdownBtActionPerformed

    private void purchaseOverviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseOverviewActionPerformed
        HashMap<String, Double> aggregation = coles.getAggregation();
        activities.append(LocalDateTime.now() + ", Summarized purchase\n");
        overviewTxt.setText(displayAggregation(aggregation));
    }//GEN-LAST:event_purchaseOverviewActionPerformed

    private void cardOverviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardOverviewActionPerformed
        String text = "Number of cards : " + coles.totalCards() + "\n";
        text += "Total points for all cards : " + coles.getCardsPoints();
        text += "\nTotal balance for all cards : " + coles.getCardsBalance();
        activities.append(LocalDateTime.now() + ", Summarized card\n");
        overviewTxt.setText(text);
    }//GEN-LAST:event_cardOverviewActionPerformed

    private void PurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurchaseActionPerformed
        String cID = cardIDTxt.getText().trim().toUpperCase();
        if (!coles.containCard(cID) && !cID.equals("CASH")) {
            JOptionPane.showMessageDialog(jPanel2,
                    "This card ID does not exist");
            return;
        }
        double amounts[] = new double[5];
        String meat = meatTxt.getText().trim();
        if (meat.equals("")) {
            meat = "0";
        }
        String deco = decoTxt.getText().trim();
        if (deco.equals("")) {
            deco = "0";
        }
        String dairy = dairyTxt.getText().trim();
        if (dairy.equals("")) {
            dairy = "0";
        }
        String clothes = clothesTxt.getText().trim();
        if (clothes.equals("")) {
            clothes = "0";
        }
        String vege = vegeTxt.getText().trim();
        if (vege.equals("")) {
            vege = "0";
        }
        try {
            amounts[0] = Double.parseDouble(meat);
            amounts[1] = Double.parseDouble(deco);
            amounts[2] = Double.parseDouble(dairy);
            amounts[3] = Double.parseDouble(vege);
            amounts[4] = Double.parseDouble(clothes);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(jPanel2,
                    "Amount must be a digit number");
        }
        latestDate = LocalDateTime.now().toString();
        if (cID.equals("CASH")) {
            coles.makePurchase(null, latestDate, amounts);
        } else {
            Card card = coles.getCard(cID);
            coles.makePurchase(card, latestDate, amounts);
        }
        double totalAmount = amounts[0] + amounts[1] + amounts[2] + amounts[3] + amounts[4];
        activities.append(LocalDateTime.now() + ", Purchase " + coles.getRecentPurchase() + " was made"
                + ", total amount is " + totalAmount + "\n");
        meatTxt.setText("");
        decoTxt.setText("");
        dairyTxt.setText("");
        clothesTxt.setText("");
        vegeTxt.setText("");
        cardIDTxt.setText("");
    }//GEN-LAST:event_PurchaseActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed

        int id = ++count;
        String nam = name.getText().trim();
        String em = email.getText().trim();
        Card c = null;
        if (anonBut.isSelected()) {
            if (!nam.equals("") && em.equals("")) {
                JOptionPane.showMessageDialog(jPanel1, "Anon Card does not have email or name");
                cardButton.clearSelection();
                name.setText("");
                email.setText("");
                return;
            }
            c = new AnonCard(id);
        } else if (basicBut.isSelected()) {
            if (nam.equals("") || em.equals("")) {
                JOptionPane.showMessageDialog(jPanel1, "You must provide email and name");
                cardButton.clearSelection();
                return;
            }
            c = new BasicCard(id, nam, em);
        } else if (premBut.isSelected()) {
            if (nam.equals("") || em.equals("")) {
                JOptionPane.showMessageDialog(jPanel1, "You must provide email and name");
                cardButton.clearSelection();
                return;
            }
            c = new PremCard(id, nam, em);
        } else {
            JOptionPane.showMessageDialog(jPanel1, "You must select card type");
            return;
        }
        if (anonBut.isSelected()) {
            activities.append(LocalDateTime.now() + ", Anon Card C" + id + " is issued\n");
        }
        if (basicBut.isSelected()) {
            activities.append(LocalDateTime.now() + ", Basic Card C" + id + " is issued\n");
        }
        if (premBut.isSelected()) {
            activities.append(LocalDateTime.now() + ", Premium Card C" + id + " is issued\n");
        }
        //Mark ID as being used (unavailable)
        cardButton.clearSelection();
        name.setText("");
        email.setText("");
        coles.addCard(c);
    }//GEN-LAST:event_createButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        String cId = cardID.getText().toUpperCase().trim();
        if (coles.containCard(cId)) {
            coles.deleteCard(cId);
            coles.deletePurchase(cId);
            cId = cId.substring(1);
            //Mark ID as not being used (available)
            cardID.setText("");
            text.setText("Delete Successfully");
        } else {
            JOptionPane.showMessageDialog(jPanel1, "Card does not exist");
            cardID.setText("");
            text.setText("Delete Unsuccessfully");
        }
        activities.append(LocalDateTime.now() + ",Card C" + cId + " was deleted\n");
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        String cID = cardID.getText().toUpperCase().trim();
        if (coles.containCard(cID)) {
            Card c = coles.getCard(cID);
            text.setText(c.toString());
            cardID.setText("");
        } else {
            JOptionPane.showMessageDialog(jPanel1, "Card does not exist");
            cardID.setText("");
            text.setText("");
        }
        activities.append(LocalDateTime.now() + ", Card" + cID + " was read\n");
    }//GEN-LAST:event_findButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed

        String startDate = fromDate.getText();
        String endDate = toDate.getText();
        //If user does not input startDate and endDate
        //By default, the program will prepopulate all purchases from the earliest date
        // to latest date
        if (startDate.equals("") && endDate.equals("")) {
            startDate = earliestDate.substring(0, 10);
            endDate = latestDate.substring(0, 10);
        }

        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        //Check if input date is in the right format
        try {
            Date start = dateFormat.parse(startDate);
            Date end = dateFormat.parse(endDate);
            if (!startDate.equals(dateFormat.format(start)) || !endDate.equals(dateFormat.format(end))) {
                JOptionPane.showMessageDialog(jPanel1, "Invalid Date, format must be yyyy-mm-dd");
                fromDate.setText("");
                toDate.setText("");
                return;
            }
            if (start.compareTo(end) > 0) {
                JOptionPane.showMessageDialog(jPanel1, "Start date must be before end date");
                fromDate.setText("");
                toDate.setText("");
                return;
            }
        } catch (ParseException e) {
            fromDate.setText("");
            toDate.setText("");
            JOptionPane.showMessageDialog(jPanel1, "Please follow format yyyy-MM-dd");
            return;
        }
        
        String text = "From date " + startDate + " to " + endDate + "\n";
        HashMap<String, Double> aggregation = new HashMap<>();
        if (dayCheck.isSelected()) {
            int dayOfWeek = daySlider.getValue();
            text += "On " + DayOfWeek.of(dayOfWeek);
            //If both day and time is selected
            if (timeCheck.isSelected()) {
                //Filter by day and time
                int time = timeSlider.getValue();
                text += " at " + time + " o'clock in 24-hour clock\n";
                aggregation = coles.getAggregationByDayTime(startDate, endDate, dayOfWeek, time);
                //If only time is selected
            } else {
                //Filter by day
                text += "\n";
                aggregation = coles.getAggregationByDay(startDate, endDate, dayOfWeek);
            }
            text += displayAggregation(aggregation);
            filterText.setText(text);
            //If only time is selected
        } else if (timeCheck.isSelected()) {
            //Filter by time
            int time = timeSlider.getValue();
            text += "at " + time + " o'clock in 24-hour clock\n";
            aggregation = coles.getAggregationByTime(startDate, endDate, time);
            text += displayAggregation(aggregation);
            filterText.setText(text);
        } //If only date is selected
        else {
            //Filter by date
            aggregation = coles.getAggregationByDate(startDate, endDate);
            text += displayAggregation(aggregation);
            filterText.setText(text);
        }


    }//GEN-LAST:event_viewButtonActionPerformed

    private void fromDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromDateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            loadData();
        } catch (IOException e) {
            System.out.println("Failed to open");
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShopApplication().setVisible(true);
            }
        });
    }

    static String earliestDate;
    static String latestDate;


    private static void loadData() throws IOException, NumberFormatException {
        coles.clearCards();
        coles.clearPurchases();
        BufferedReader reader = new BufferedReader(new FileReader(cardFileName));
        String line = reader.readLine();
        while (line != null) {
            String fields[] = line.split(",");
            int id = Integer.parseInt(fields[1].substring(1));
            if (id > count) {
                count = id;
            }

            switch (fields[0]) {
                case "AnonCard":
                    AnonCard anon = new AnonCard(id);
                    anon.setPoints(Integer.parseInt(fields[2]));
                    coles.addCard(anon);
                    break;
                case "BasicCard":
                    BasicCard basic = new BasicCard(id, fields[4], fields[5]);
                    basic.setPoints(Integer.parseInt(fields[2]));
                    basic.setBalance(Double.parseDouble(fields[3]));
                    coles.addCard(basic);
                    break;
                case "PremiumCard":
                    PremCard prem = new PremCard(id, fields[4], fields[5]);
                    prem.setPoints(Integer.parseInt(fields[2]));
                    prem.setBalance(Double.parseDouble(fields[3]));
                    coles.addCard(prem);
                    break;
            }

            line = reader.readLine();

        }
        reader.close();

        BufferedReader purchaseReader = new BufferedReader(new FileReader(purchaseFileName));
        String purchaseLine = purchaseReader.readLine();
        if (purchaseLine != null) {
            String fields[] = purchaseLine.split(",");
            earliestDate = fields[8];
        }

        while (purchaseLine != null) {
            if (!purchaseLine.equals("")) {
                String fields[] = purchaseLine.split(",");
                int id = Integer.parseInt(fields[1].substring(1));
                double amounts[] = new double[5];
                for (int i = 0; i < 5; i++) {
                    amounts[i] = Double.parseDouble(fields[i + 3]);

                }
                Purchase newPur = new Purchase(fields[2], fields[8], amounts);
                coles.addPurchase(newPur);
                latestDate = fields[8];
            }
            purchaseLine = purchaseReader.readLine();

        }
        purchaseReader.close();

        BufferedReader logReader = new BufferedReader(new FileReader(logFileName));
        String logLine = logReader.readLine();
        while (logLine != null) {
            activities.append(logLine + "\n");
            logLine = logReader.readLine();
        }
        logReader.close();
    }

    private static void storeData() throws IOException {
        BufferedWriter cardWriter = new BufferedWriter(new FileWriter(cardFileName));
        LinkedHashMap<String, Card> cards = coles.getCards();
        for (Map.Entry<String, Card> card : cards.entrySet()) {
            Card c = card.getValue();
            switch (c.getType()) {
                case "anon":
                    cardWriter.write("AnonCard," + c.getID() + "," + c.getPoints() + "\n");
                    break;
                case "basic"://Inheritance, method
                    cardWriter.write("BasicCard," + c.getID() + "," + c.getPoints() + "," + c.getBalance() + "," + c.getName() + "," + c.getEmail() + "\n");
                    break;
                case "premium":
                    cardWriter.write("PremiumCard," + c.getID() + "," + c.getPoints() + "," + c.getBalance() + "," + c.getName() + "," + c.getEmail() + "\n");
                    break;
            }
        }
        cardWriter.close();
        BufferedWriter purchaseWriter = new BufferedWriter(new FileWriter(purchaseFileName));
        ArrayList<Purchase> purchases = coles.getPurchases();
        for (Purchase pur : purchases) {
            purchaseWriter.write("Purchase," + pur.getRID() + "," + pur.getCID() + "," + pur.eachAmount() + "," + pur.getTime() + "\n");
        }
        purchaseWriter.close();

        BufferedWriter logWriter = new BufferedWriter(new FileWriter(logFileName));
        logWriter.write(activities.toString());
        logWriter.close();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Purchase;
    private javax.swing.JRadioButton anonBut;
    private javax.swing.JRadioButton basicBut;
    private javax.swing.ButtonGroup cardButton;
    private javax.swing.JTextField cardID;
    private javax.swing.JTextField cardIDTxt;
    private javax.swing.JButton cardOverview;
    private javax.swing.JTextField clothesTxt;
    private javax.swing.JButton createButton;
    private javax.swing.JTextField dairyTxt;
    private javax.swing.JCheckBox dayCheck;
    private javax.swing.JSlider daySlider;
    private javax.swing.JTextField decoTxt;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField email;
    private javax.swing.JTextArea filterText;
    private javax.swing.JButton findButton;
    private javax.swing.JTextField fromDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTextField meatTxt;
    private javax.swing.JTextField name;
    private javax.swing.JTextArea overviewTxt;
    private javax.swing.JRadioButton premBut;
    private javax.swing.JButton purchaseOverview;
    private javax.swing.JButton shutdownBt;
    private javax.swing.JTextArea text;
    private javax.swing.JCheckBox timeCheck;
    private javax.swing.JSlider timeSlider;
    private javax.swing.JTextField toDate;
    private javax.swing.JTextField vegeTxt;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
